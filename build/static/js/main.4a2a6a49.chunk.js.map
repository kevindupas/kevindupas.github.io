{"version":3,"sources":["components/icons/play.svg","components/icons/plus.svg","components/icons/heart.svg","Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","App.js","index.js"],"names":["module","exports","API_KEY","basicFecth","endpoint","a","fetch","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","console","log","firtsDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","PlayIcone","PlusIcone","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","Heart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a2a6a49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.34df3111.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.d3bbc6b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.e316d44d.svg\";","const API_KEY = 'c92d933775007acb6822af260d3d457e';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n\nconst basicFecth = async (endpoint) =>{\n    return (await fetch(`${API_BASE}${endpoint}`)).json();\n}\n\nexport default {\n     getHomeList : async () =>{\n        return [\n            {\n                slug: 'originals',\n                title : \"Originais do Netflix\",\n                items : await basicFecth(`/discover/tv/?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title : \"Recomendados para Você\",\n                items : await basicFecth(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title : \"Em Alta\",\n                items : await basicFecth(`/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title : \"Ação\",\n                items : await basicFecth(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title : \"Comédia\",\n                items : await basicFecth(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title : \"Terror\",\n                items : await basicFecth(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title : \"Romance\",\n                items : await basicFecth(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            },            \n            {\n                slug: 'documentary',\n                title : \"Documentários\",\n                items : await basicFecth(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            },\n        ]\n     },\n     getMovieInfo: async (movieId, type) => {\n         let info = {};\n\n         if(movieId) {\n             switch(type) {\n                case 'movie':\n                     info = await basicFecth(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                case 'tv':\n                    info = await basicFecth(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                default:\n                     info = null;\n                break;\n             }\n         }\n\n         return info;\n     }\n}","import React, { useState } from 'react';\nimport './MovieRow.css';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, items}) => {\n  const [scrollX, setScrollX] = useState(0)\n\n  const handleLeftArrow = () => {\n      let x = scrollX + Math.round(window.innerWidth / 2);\n      if(x > 0) {\n        x = 0;\n      }\n      setScrollX(x)\n  }\n\n  const handleRightArrow = () => {\n      let x = scrollX - Math.round(window.innerWidth / 2)\n      let listW = items.results.length * 150;\n      if((window.innerWidth - listW) > x) {\n        x = (window.innerWidth - listW) - 60;\n      }\n      setScrollX(x)\n  }\n\n  return (\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n        <NavigateBeforeIcon style={{fontSize: 50}} />\n      </div>\n      <div className=\"movieRow--right\" onClick={handleRightArrow}>\n        <NavigateNextIcon style={{fontSize: 50}} />\n      </div>\n      <div className=\"movieRow--listarea\">\n        <div className=\"movieRow--list\" style={{\n          marginLeft: scrollX,\n          width: items.results.length * 150\n        }}>\n        {items.results.length > 0 && items.results.map((item, key) => (\n          <div key={key} className=\"movieRow--item\">\n            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} key={key} />\n          </div>\n        ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport './FeaturedMovie.css'\n\nimport PlayIcone from './icons/play.svg';\nimport PlusIcone from './icons/plus.svg';\n\nexport default ({item}) => {\n  console.log(item)\n\n  let firtsDate = new Date(item.first_air_date);\n  let genres = [];\n  for(let i in item.genres) {\n    genres.push( item.genres[i].name );\n  }\n\n  let description = item.overview;\n  if(description.length > 200) {\n    description = description.substring(0, 200)+'...';\n  }\n\n  return (\n    <section className=\"featured\" style={{\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    }}>\n      <div className=\"featured--vertical\">\n        <div className=\"featured--horizontal\">\n          <div className=\"featured--name\">{item.original_name}</div>\n          <div className=\"featured--info\">\n            <div className=\"featured--points\">{item.vote_average} pontos</div>\n            <div className=\"featured--year\">{firtsDate.getFullYear()}</div>\n            <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n          </div>\n          <div className=\"featured--description\">{description}</div>\n          <div className=\"featured--buttons\">\n              <a href={`/watch/${item.id}`} className=\"featured--watchbutton\"><img src={PlayIcone} alt=\"Play\"/> Assistir</a>\n              <a href={`/watch/${item.id}`} className=\"featured--mylistbutton\"><img src={PlusIcone} alt=\"adicionar\"/> Minha Listas</a>\n\n          </div>\n          <div className=\"featured--genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\n        </div>\n      </div>\n    </section>\n  )\n}"," import React from 'react';\n import './Header.css';\n\n export default ({black}) => {\n   return (\n     <header className={black ? 'black' : ''}>\n       <div className=\"header--logo\">\n         <a href=\"/\">\n           <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\" alt=\"Netflix\"/>\n         </a>\n       </div>\n       <div className=\"header--user\">\n         <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Perfil\"/>\n       </div>\n     </header>\n   )\n }","import React, { useEffect, useState } from 'react';\nimport './App.css'\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nimport Heart from './components/icons/heart.svg';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      // pegando a lista TOTAL\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // Pegando o Featured\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackHeader} />\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <footer>\n        Feito com <span role=\"img\" aria-label=\"coração\"><img src={Heart} alt=\"coracao\"/></span> pelo Rodrigo junior<br />\n        Direitos de imagem para Netflix<br/>\n        Dados pegos do site Themoviedb.org\n      </footer>\n\n      {movieList.length <= 0 &&\n      <div className=\"loading\">\n        <img src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2000,c_limit/Netflix_LoadTime.gif\" alt=\"Carregando\"/>\n      </div>\n      }\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}